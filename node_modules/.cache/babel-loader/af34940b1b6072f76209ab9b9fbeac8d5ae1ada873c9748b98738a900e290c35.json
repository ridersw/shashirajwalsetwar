{"ast":null,"code":"import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value) {\n  let fpsLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultFps;\n  let smooth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    value,\n    factor: smooth ? defaultFps / fpsLimit : defaultFps * value / millisecondsToSeconds\n  };\n}\nfunction loadContainerOptions(engine, container) {\n  const options = new Options(engine, container);\n  for (var _len = arguments.length, sourceOptionsArr = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    sourceOptionsArr[_key - 2] = arguments[_key];\n  }\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n        if (entry.isIntersecting) {\n          void this.play();\n        } else {\n          this.pause();\n        }\n      }\n    };\n    this._nextFrame = timestamp => {\n      try {\n        if (!this._smooth && this._lastFrameTime !== undefined && timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n          this.draw(false);\n          return;\n        }\n        this._lastFrameTime ??= timestamp;\n        const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n        this.addLifeTime(delta.value);\n        this._lastFrameTime = timestamp;\n        if (delta.value > millisecondsToSeconds) {\n          this.draw(false);\n          return;\n        }\n        this.particles.draw(delta);\n        if (!this.alive()) {\n          this.destroy();\n          return;\n        }\n        if (this.animationStatus) {\n          this.draw(false);\n        }\n      } catch (e) {\n        getLogger().error(`${errorPrefix} in animation loop`, e);\n      }\n    };\n    this._engine = engine;\n    this.id = Symbol(id);\n    this.fpsLimit = 120;\n    this._smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this._lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._clickHandlers = new Map();\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.effectDrawers = new Map();\n    this.shapeDrawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n    this._engine.dispatchEvent(EventType.containerBuilt, {\n      container: this\n    });\n  }\n  get animationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        const pxRatio = this.retina.pixelRatio,\n          posRetina = {\n            x: pos.x * pxRatio,\n            y: pos.y * pxRatio\n          },\n          particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n        callback(e, particles);\n      },\n      clickHandler = e => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        const mouseEvent = e,\n          pos = {\n            x: mouseEvent.offsetX || mouseEvent.clientX,\n            y: mouseEvent.offsetY || mouseEvent.clientY\n          },\n          radius = 1;\n        clickOrTouchHandler(e, pos, radius);\n      },\n      touchStartHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touched = true;\n        touchMoved = false;\n      },\n      touchMoveHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touchMoved = true;\n      },\n      touchEndHandler = e => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        if (touched && !touchMoved) {\n          const touchEvent = e,\n            lengthOffset = 1;\n          let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n          if (!lastTouch) {\n            lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n            if (!lastTouch) {\n              return;\n            }\n          }\n          const element = this.canvas.element,\n            canvasRect = element ? element.getBoundingClientRect() : undefined,\n            minCoordinate = 0,\n            pos = {\n              x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n              y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate)\n            };\n          clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n        }\n        touched = false;\n        touchMoved = false;\n      },\n      touchCancelHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touched = false;\n        touchMoved = false;\n      };\n    let touched = false,\n      touchMoved = false;\n    this._clickHandlers.set(\"click\", clickHandler);\n    this._clickHandlers.set(\"touchstart\", touchStartHandler);\n    this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n    this._clickHandlers.set(\"touchend\", touchEndHandler);\n    this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n    for (const [key, handler] of this._clickHandlers) {\n      el.addEventListener(key, handler);\n    }\n  }\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n  addPath(key, generator) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator);\n    return true;\n  }\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n  clearClickHandlers() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    for (const [key, handler] of this._clickHandlers) {\n      this.interactivity.element?.removeEventListener(key, handler);\n    }\n    this._clickHandlers.clear();\n  }\n  destroy() {\n    let remove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.clearClickHandlers();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const [, effectDrawer] of this.effectDrawers) {\n      effectDrawer.destroy?.(this);\n    }\n    for (const [, shapeDrawer] of this.shapeDrawers) {\n      shapeDrawer.destroy?.(this);\n    }\n    for (const key of this.effectDrawers.keys()) {\n      this.effectDrawers.delete(key);\n    }\n    for (const key of this.shapeDrawers.keys()) {\n      this.shapeDrawers.delete(key);\n    }\n    this._engine.clearPlugins(this);\n    this.destroyed = true;\n    if (remove) {\n      const mainArr = this._engine.items,\n        idx = mainArr.findIndex(t => t === this),\n        minIndex = 0;\n      if (idx >= minIndex) {\n        const deleteCount = 1;\n        mainArr.splice(idx, deleteCount);\n      }\n    }\n    this._engine.dispatchEvent(EventType.containerDestroyed, {\n      container: this\n    });\n  }\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    const frame = timestamp => {\n      if (refreshTime) {\n        this._lastFrameTime = undefined;\n        refreshTime = false;\n      }\n      this._nextFrame(timestamp);\n    };\n    this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n  }\n  async export(type) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    for (const [, plugin] of this.plugins) {\n      if (!plugin.export) {\n        continue;\n      }\n      const res = await plugin.export(type, options);\n      if (!res.supported) {\n        continue;\n      }\n      return res.blob;\n    }\n    getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const [, plugin] of this.plugins) {\n      plugin.handleClickMode?.(mode);\n    }\n  }\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const effects = this._engine.getSupportedEffects();\n    for (const type of effects) {\n      const drawer = this._engine.getEffectDrawer(type);\n      if (drawer) {\n        this.effectDrawers.set(type, drawer);\n      }\n    }\n    const shapes = this._engine.getSupportedShapes();\n    for (const type of shapes) {\n      const drawer = this._engine.getShapeDrawer(type);\n      if (drawer) {\n        this.shapeDrawers.set(type, drawer);\n      }\n    }\n    await this.particles.initPlugins();\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    const availablePlugins = await this._engine.getAvailablePlugins(this);\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    const {\n      zLayers,\n      duration,\n      delay,\n      fpsLimit,\n      smooth\n    } = this.actualOptions;\n    this.zLayers = zLayers;\n    this._duration = getRangeValue(duration) * millisecondsToSeconds;\n    this._delay = getRangeValue(delay) * millisecondsToSeconds;\n    this._lifeTime = 0;\n    const defaultFpsLimit = 120,\n      minFpsLimit = 0;\n    this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n    this._smooth = smooth;\n    for (const [, drawer] of this.effectDrawers) {\n      await drawer.init?.(this);\n    }\n    for (const [, drawer] of this.shapeDrawers) {\n      await drawer.init?.(this);\n    }\n    for (const [, plugin] of this.plugins) {\n      await plugin.init?.();\n    }\n    this._engine.dispatchEvent(EventType.containerInit, {\n      container: this\n    });\n    await this.particles.init();\n    this.particles.setDensity();\n    for (const [, plugin] of this.plugins) {\n      plugin.particlesSetup?.();\n    }\n    this._engine.dispatchEvent(EventType.particlesSetup, {\n      container: this\n    });\n  }\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._currentTheme = name;\n    await this.refresh();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimation(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.pause?.();\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(EventType.containerPaused, {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(EventType.containerPlay, {\n      container: this\n    });\n    this.draw(needsUpdate ?? false);\n  }\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    return this.start();\n  }\n  async reset(sourceOptions) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._initialSourceOptions = sourceOptions;\n    this._sourceOptions = sourceOptions;\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    return this.refresh();\n  }\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      const start = async () => {\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n          await plugin.start?.();\n        }\n        this._engine.dispatchEvent(EventType.containerStarted, {\n          container: this\n        });\n        this.play();\n        resolve();\n      };\n      this._delayTimeout = setTimeout(() => void start(), this._delay);\n    });\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.stop?.();\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(EventType.containerStopped, {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this._responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this._responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n}","map":{"version":3,"names":["animate","cancelAnimation","getRangeValue","errorPrefix","millisecondsToSeconds","getLogger","safeIntersectionObserver","Canvas","EventListeners","EventType","Options","Particles","Retina","loadOptions","guardCheck","container","destroyed","defaultFps","initDelta","value","fpsLimit","arguments","length","undefined","smooth","factor","loadContainerOptions","engine","options","_len","sourceOptionsArr","Array","_key","Container","constructor","id","sourceOptions","_intersectionManager","entries","actualOptions","pauseOnOutsideViewport","entry","target","interactivity","element","isIntersecting","play","pause","_nextFrame","timestamp","_smooth","_lastFrameTime","draw","delta","addLifeTime","particles","alive","destroy","animationStatus","e","error","_engine","Symbol","_delay","_duration","_lifeTime","_firstStart","started","_paused","zLayers","pageHidden","_clickHandlers","Map","_sourceOptions","_initialSourceOptions","retina","canvas","pathGenerators","mouse","clicking","inside","plugins","effectDrawers","shapeDrawers","_options","_eventListeners","_intersectionObserver","dispatchEvent","containerBuilt","addClickHandler","callback","el","clickOrTouchHandler","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lengthOffset","lastTouch","touches","changedTouches","canvasRect","getBoundingClientRect","minCoordinate","left","top","Math","max","radiusX","radiusY","touchCancelHandler","set","key","handler","addEventListener","addPath","generator","override","has","clearClickHandlers","removeEventListener","clear","remove","stop","effectDrawer","shapeDrawer","keys","delete","clearPlugins","mainArr","items","idx","findIndex","t","minIndex","deleteCount","splice","containerDestroyed","force","refreshTime","frame","_drawAnimationFrame","export","type","plugin","res","supported","blob","handleClickMode","mode","init","effects","getSupportedEffects","drawer","getEffectDrawer","shapes","getSupportedShapes","getShapeDrawer","initPlugins","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","duration","delay","defaultFpsLimit","minFpsLimit","containerInit","setDensity","particlesSetup","loadTheme","name","_currentTheme","refresh","containerPaused","needsUpdate","autoPlay","containerPlay","start","reset","Promise","resolve","addListeners","HTMLElement","observe","containerStarted","_delayTimeout","setTimeout","clearTimeout","removeListeners","unobserve","containerStopped","responsive","newMaxWidth","setResponsive","size","width","setTheme","_responsiveMaxWidth"],"sources":["/Users/wshashiraj/Desktop/Github Projects/Final Portfolio Website/node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e, lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this), minIndex = 0;\n            if (idx >= minIndex) {\n                const deleteCount = 1;\n                mainArr.splice(idx, deleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}